name: Release

on:
  push:
    branches:
      - main
      - 'feat/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: figma-relay

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image repo (lowercase)
        id: repo
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "OWNER_LC=$OWNER_LC" >> $GITHUB_ENV
          IMAGE_REPO="${REGISTRY}/${OWNER_LC}/${IMAGE_NAME}"
          echo "IMAGE_REPO=$IMAGE_REPO" >> $GITHUB_ENV
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: relay/Dockerfile
          target: production
          load: true
          tags: ${{ env.IMAGE_REPO }}:${{ env.SHORT_SHA }}

      - name: Smoke test /health
        env:
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
          IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: |
          set -euo pipefail
          trap 'docker rm -f relay-smoke >/dev/null 2>&1 || true' EXIT
          docker run -d --rm --name relay-smoke -p 3000:3000 "$IMAGE_REPO:$IMAGE_TAG"
          for attempt in $(seq 1 20); do
            if curl -fsS http://localhost:3000/health > /tmp/health.txt; then
              cat /tmp/health.txt
              break
            fi
            sleep 2
          done
          curl -fsS http://localhost:3000/health

      - name: Stop smoke container
        if: always()
        run: docker rm -f relay-smoke >/dev/null 2>&1 || true

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        env:
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
          IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: |
          set -euo pipefail
          docker push "$IMAGE_REPO:$IMAGE_TAG"
          if [ "${{ github.ref_protected }}" = "true" ]; then
            docker tag "$IMAGE_REPO:$IMAGE_TAG" "$IMAGE_REPO:latest"
            docker push "$IMAGE_REPO:latest"
          fi
